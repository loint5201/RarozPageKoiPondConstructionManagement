// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(KoiPondConstructionManagementContext))]
    partial class KoiPondConstructionManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.ConstructionProcess", b =>
                {
                    b.Property<int>("ProcessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProcessID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcessId"));

                    b.Property<int?>("AssignedStaffId")
                        .HasColumnType("int")
                        .HasColumnName("AssignedStaffID");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int")
                        .HasColumnName("RequestID");

                    b.Property<int?>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int?>("Step")
                        .HasColumnType("int");

                    b.Property<string>("StepInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ProcessId")
                        .HasName("PK__Construc__1B39A976DC28FE0E");

                    b.HasIndex("AssignedStaffId");

                    b.HasIndex("RequestId");

                    b.ToTable("ConstructionProcess", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.ConstructionRequest", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RequestID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"));

                    b.Property<decimal?>("CostEstimate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CustomDesignDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<int?>("DesignId")
                        .HasColumnType("int")
                        .HasColumnName("DesignID");

                    b.Property<int?>("MaintenanceServiceId")
                        .HasColumnType("int");

                    b.Property<string>("RejectReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("RequestId")
                        .HasName("PK__Construc__33A8519A9A183ECA");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DesignId");

                    b.HasIndex("MaintenanceServiceId");

                    b.ToTable("ConstructionRequests");
                });

            modelBuilder.Entity("Domain.Entities.CustomerOrderHistory", b =>
                {
                    b.Property<int>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HistoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryId"));

                    b.Property<decimal>("ActualCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<int?>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int")
                        .HasColumnName("RequestID");

                    b.HasKey("HistoryId")
                        .HasName("PK__Customer__4D7B4ADD623FA230");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RequestId");

                    b.ToTable("CustomerOrderHistory", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FeedbackID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int")
                        .HasColumnName("RequestID");

                    b.Property<int?>("ServiceRequestId")
                        .HasColumnType("int")
                        .HasColumnName("ServiceRequestID");

                    b.HasKey("FeedbackId")
                        .HasName("PK__Feedback__6A4BEDF672535547");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RequestId");

                    b.HasIndex("ServiceRequestId");

                    b.ToTable("Feedback", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.KoiDesign", b =>
                {
                    b.Property<int>("DesignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DesignID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DesignId"));

                    b.Property<string>("CostEstimate")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesignImage")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("DesignName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("DesignType")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("DesignId")
                        .HasName("PK__KoiDesig__32B8E17F671C8093");

                    b.ToTable("KoiDesigns");
                });

            modelBuilder.Entity("Domain.Entities.MaintenanceService", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ServiceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasMaxLength(100)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("RequireDesign")
                        .HasColumnType("bit");

                    b.Property<string>("ServiceImage")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("ServiceName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ServiceId")
                        .HasName("PK__Maintena__C51BB0EAF9178D2D");

                    b.ToTable("MaintenanceServices");
                });

            modelBuilder.Entity("Domain.Entities.PaymentPolicy", b =>
                {
                    b.Property<int>("PolicyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PolicyID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PolicyId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PolicyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PolicyId")
                        .HasName("PK__PaymentP__2E13394406BD6B45");

                    b.ToTable("PaymentPolicies");
                });

            modelBuilder.Entity("Domain.Entities.Promotion", b =>
                {
                    b.Property<int>("PromotionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PromotionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("PromotionImage")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("PromotionName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("PromotionId")
                        .HasName("PK__Promotio__52C42F2F325EA4D0");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("Domain.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE3AC9B5849C");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Domain.Entities.ServiceRequest", b =>
                {
                    b.Property<int>("ServiceRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ServiceRequestID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceRequestId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("ServiceID");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ServiceRequestId")
                        .HasName("PK__ServiceR__790F6CAB08527AA3");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ServiceRequests");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Avatar")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCAC0619AF3F");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D105349EE3CA92")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Entities.ConstructionProcess", b =>
                {
                    b.HasOne("Domain.Entities.User", "AssignedStaff")
                        .WithMany("ConstructionProcesses")
                        .HasForeignKey("AssignedStaffId")
                        .HasConstraintName("FK__Construct__Assig__45F365D3");

                    b.HasOne("Domain.Entities.ConstructionRequest", "Request")
                        .WithMany("ConstructionProcesses")
                        .HasForeignKey("RequestId")
                        .HasConstraintName("FK__Construct__Reque__44FF419A");

                    b.Navigation("AssignedStaff");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("Domain.Entities.ConstructionRequest", b =>
                {
                    b.HasOne("Domain.Entities.User", "Customer")
                        .WithMany("ConstructionRequests")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Construct__Custo__3F466844");

                    b.HasOne("Domain.Entities.KoiDesign", "Design")
                        .WithMany("ConstructionRequests")
                        .HasForeignKey("DesignId")
                        .HasConstraintName("FK__Construct__Desig__403A8C7D");

                    b.HasOne("Domain.Entities.MaintenanceService", "MaintenanceService")
                        .WithMany("ConstructionRequests")
                        .HasForeignKey("MaintenanceServiceId");

                    b.Navigation("Customer");

                    b.Navigation("Design");

                    b.Navigation("MaintenanceService");
                });

            modelBuilder.Entity("Domain.Entities.CustomerOrderHistory", b =>
                {
                    b.HasOne("Domain.Entities.User", "Customer")
                        .WithMany("CustomerOrderHistories")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__CustomerO__Custo__5CD6CB2B");

                    b.HasOne("Domain.Entities.ConstructionRequest", "Request")
                        .WithMany("CustomerOrderHistories")
                        .HasForeignKey("RequestId")
                        .HasConstraintName("FK__CustomerO__Reque__5DCAEF64");

                    b.Navigation("Customer");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("Domain.Entities.Feedback", b =>
                {
                    b.HasOne("Domain.Entities.User", "Customer")
                        .WithMany("Feedbacks")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Feedback__Custom__5441852A");

                    b.HasOne("Domain.Entities.ConstructionRequest", "Request")
                        .WithMany("Feedbacks")
                        .HasForeignKey("RequestId")
                        .HasConstraintName("FK__Feedback__Reques__5535A963");

                    b.HasOne("Domain.Entities.ServiceRequest", "ServiceRequest")
                        .WithMany("Feedbacks")
                        .HasForeignKey("ServiceRequestId")
                        .HasConstraintName("FK__Feedback__Servic__5629CD9C");

                    b.Navigation("Customer");

                    b.Navigation("Request");

                    b.Navigation("ServiceRequest");
                });

            modelBuilder.Entity("Domain.Entities.ServiceRequest", b =>
                {
                    b.HasOne("Domain.Entities.User", "Customer")
                        .WithMany("ServiceRequests")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__ServiceRe__Custo__4CA06362");

                    b.HasOne("Domain.Entities.MaintenanceService", "Service")
                        .WithMany("ServiceRequests")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("FK__ServiceRe__Servi__4D94879B");

                    b.Navigation("Customer");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.HasOne("Domain.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__Users__RoleID__3A81B327");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Domain.Entities.ConstructionRequest", b =>
                {
                    b.Navigation("ConstructionProcesses");

                    b.Navigation("CustomerOrderHistories");

                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("Domain.Entities.KoiDesign", b =>
                {
                    b.Navigation("ConstructionRequests");
                });

            modelBuilder.Entity("Domain.Entities.MaintenanceService", b =>
                {
                    b.Navigation("ConstructionRequests");

                    b.Navigation("ServiceRequests");
                });

            modelBuilder.Entity("Domain.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Domain.Entities.ServiceRequest", b =>
                {
                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("ConstructionProcesses");

                    b.Navigation("ConstructionRequests");

                    b.Navigation("CustomerOrderHistories");

                    b.Navigation("Feedbacks");

                    b.Navigation("ServiceRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
